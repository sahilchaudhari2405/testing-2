version: '3.7'
services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://gateway:4000
    depends_on:
      - gateway
    networks:
      - app-network

  gateway:
    build:
      context: ./gateways  
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206
    depends_on:
      - products
      - import-export
      - sales-advancepay
      - sales-cart
      - sales-ongoing
      - sales-order
      - user-admin
      - user-auth
      - user-setting
      - user-users
    networks:
      - app-network

  products:
    build:
      context: ./products/product
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206

    networks:
      - app-network
  import-export:
    build:
      context: ./products/ImportExport
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - CORS_ALLOWED_ORIGINS=http://software.software.apalabajar.shop

    networks:
      - app-network
  ## ðŸ›’ SALES SERVICES (Renamed)
  sales-advancepay:
    build:
      context: ./sales/AdvancePay  
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      - CORS_ALLOWED_ORIGINS=http://software.software.apalabajar.shop
    networks:
      - app-network

  sales-cart:
    build:
      context: ./sales/cart  
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
    environment:
      - CORS_ALLOWED_ORIGINS=http://software.software.apalabajar.shop
    networks:
      - app-network
      
  sales-ongoing:
    build:
      context: ./sales/onGoing  
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206
    networks:
      - app-network

  sales-order:
    build:
      context: ./sales/order  
      dockerfile: Dockerfile
    ports:
      - "4004:4004"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206

    networks:
      - app-network

  ## ðŸ‘¤ USER SERVICES (Renamed)
  user-admin:
    build:
      context: ./user/admin  
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206

    networks:
      - app-network

  user-auth:
    build:
      context: ./user/Auth  
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206

    networks:
      - app-network

  user-setting:
    build:
      context: ./user/setting  
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206

    networks:
      - app-network

  user-users:
    build:
      context: ./user/users  
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    environment:
      - CORS_ALLOWED_ORIGINS=http://65.2.63.206
    networks:
      - app-network
  certbot-init:
    image: certbot/certbot
    container_name: certbot-init
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        certbot certonly --standalone --email sahilchaudhari2405@gmail.com \
        -d software.apalabajar.shop -d www.software.apalabajar.shop \
        --agree-tos --force-renewal 
        touch /var/www/certbot/done
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
    restart: "no"

  certbot-renew:
    image: certbot/certbot
    container_name: certbot-renew
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        while true; do
          certbot renew --webroot -w /var/www/certbot
          sleep 60d
        done
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    restart: unless-stopped

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      certbot-init:
        condition: service_completed_successfully
      client:  # Changed from 'frontend' to 'client'
        condition: service_started
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt  # Mount SSL certs
      - ./certbot/www:/var/www/certbot  # Webroot for Certbot challenge
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
